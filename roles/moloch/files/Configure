#!/bin/bash
# Simple capital C Configure script for rpm/deb, like the old days

if [ "$1" == "--help" ]; then
    echo "Configure (--wise|--parliament|)  = Only 1 option can be used"
    echo "--wise         = install and start wise"
    echo "--parliament   = install and start parliament"
    echo "               = install moloch capture and viewer"
    echo "--help         = this help"
    exit 0
fi

if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root"
    exit 1
fi

MOLOCH_NAME=BUILD_MOLOCH_NAME
if [ "$MOLOCH_NAME" == "BUILD_MOLOCH_NAME" ]; then
    MOLOCH_NAME=moloch
fi

MOLOCH_INSTALL_DIR=/data/moloch
if [ "$MOLOCH_INSTALL_DIR" == "BUILD_MOLOCH_""INSTALL_DIR" ]; then
MOLOCH_INSTALL_DIR=/data/$MOLOCH_NAME
fi

if [ "$1" == "--wise" ]; then
    if [ ! -f "$MOLOCH_INSTALL_DIR/etc/wise.ini" ]; then
        sed -e "s,MOLOCH_ELASTICSEARCH,${MOLOCH_ELASTICSEARCH},g" -e "s,MOLOCH_INSTALL_DIR,${MOLOCH_INSTALL_DIR},g" < $MOLOCH_INSTALL_DIR/etc/wise.ini.sample > $MOLOCH_INSTALL_DIR/etc/wise.ini
    else
        echo "Not overwriting $MOLOCH_INSTALL_DIR/etc/wise.ini, delete and run again if update required (usually not), or edit by hand"
        sleep 1
    fi

    if [ -d "/etc/systemd" ] && [ -x "/bin/systemctl" ]; then
        echo "Installing systemd start files, use systemctl"
        sed -e "s,MOLOCH_INSTALL_DIR,${MOLOCH_INSTALL_DIR},g" < $MOLOCH_INSTALL_DIR/etc/molochwise.systemd.service > /etc/systemd/system/molochwise.service
        systemctl daemon-reload
        systemctl enable molochwise
        systemctl start molochwise
    elif [ -d "/etc/init" ]; then
        echo "Installing upstart start files, use start"
        sed -e "s,MOLOCH_INSTALL_DIR,${MOLOCH_INSTALL_DIR},g" < $MOLOCH_INSTALL_DIR/etc/molochwise.upstart.conf > /etc/init/molochwise.conf
        start molochwise
    fi


    exit 0;
fi

if [ "$1" == "--parliament" ]; then
    if [ -d "/etc/systemd" ] && [ -x "/bin/systemctl" ]; then
        echo "Installing systemd start files, use systemctl"
        sed -e "s,MOLOCH_INSTALL_DIR,${MOLOCH_INSTALL_DIR},g" < $MOLOCH_INSTALL_DIR/etc/molochparliament.systemd.service > /etc/systemd/system/molochparliament.service
        systemctl daemon-reload
        systemctl enable molochparliament
        systemctl start molochparliament
    elif [ -d "/etc/init" ]; then
        echo "Installing upstart start files, use 'start molochparliament'"
        sed -e "s,MOLOCH_INSTALL_DIR,${MOLOCH_INSTALL_DIR},g" < $MOLOCH_INSTALL_DIR/etc/molochparliament.upstart.conf > /etc/init/molochparliament.conf
        start molochparliament
    fi

    exit 0;
fi

################################################################################
## Ask config questions
# if [ -z "$MOLOCH_INTERFACE" ]; then
#    echo -n "Found interfaces: "
#    if [ ! -f /sbin/ifconfig ]; then
#        ip -o link | cut -f2 -d: | tr '\n' ' ' | sed 's/ \+/ /ig' | sed 's/ //1' | sed 's/[[:blank:]]*$//' | tr ' ' ';' | sed 's/$/\n/'
#    else
#        /sbin/ifconfig | grep "^[a-z]" | cut -d: -f1 | cut -d" " -f1 | paste -s -d";"
#    fi
#    echo -n "Semicolon ';' seperated list of interfaces to monitor [eth1] "
#    read -r MOLOCH_INTERFACE
# fi
# if [ -z "$MOLOCH_INTERFACE" ]; then MOLOCH_INTERFACE="eth1"; fi

# MOLOCH_LOCALELASTICSEARCH=not-set
# until [ "$MOLOCH_LOCALELASTICSEARCH" == "yes" ] || [ "$MOLOCH_LOCALELASTICSEARCH" == "no" ] || [ "$MOLOCH_LOCALELASTICSEARCH" == "" ]; do
#    echo -n "Install Elasticsearch server locally for demo, must have at least 3G of memory, NOT recommended for production use (yes or no) [no] "
#    read -r MOLOCH_LOCALELASTICSEARCH
# done

# if [ "$MOLOCH_LOCALELASTICSEARCH" == "yes" ]; then
#     MOLOCH_ELASTICSEARCH="http://localhost:9200"
#     which java
#     JAVA_VAL=$?
#
#     if [ $JAVA_VAL -ne 0 ]; then
#         echo "java command not found, make sure java is installed and in the path and run again"
#     fi
# else
#     if [ -z "$MOLOCH_ELASTICSEARCH" ]; then
#         echo -n "Elasticsearch server URL [http://localhost:9200] "
#         read -r MOLOCH_ELASTICSEARCH
#     fi
#     if [ -z "$MOLOCH_ELASTICSEARCH" ]; then MOLOCH_ELASTICSEARCH="http://localhost:9200"; fi
# fi

# while [ -z "$MOLOCH_PASSWORD" ]; do
#    echo -n "Password to encrypt S2S and other things [no-default] "
#    read -r MOLOCH_PASSWORD
# done
# if [ -z "$MOLOCH_PASSWORD" ]; then echo "Must provide a password"; exit; fi
#

################################################################################
echo "Moloch - Creating configuration files"
if [ ! -f "$MOLOCH_INSTALL_DIR/etc/config.ini" ]; then
    echo sed -e "s/MOLOCH_INTERFACE/${MOLOCH_INTERFACE}/g" -e "s,MOLOCH_ELASTICSEARCH,${MOLOCH_ELASTICSEARCH},g" -e "s/MOLOCH_PASSWORD/${MOLOCH_PASSWORD}/g" -e "s,MOLOCH_INSTALL_DIR,${MOLOCH_INSTALL_DIR},g" < $MOLOCH_INSTALL_DIR/etc/config.ini.sample > $MOLOCH_INSTALL_DIR/etc/config.ini
    sed -e "s/MOLOCH_INTERFACE/${MOLOCH_INTERFACE}/g" -e "s,MOLOCH_ELASTICSEARCH,${MOLOCH_ELASTICSEARCH},g" -e "s/MOLOCH_PASSWORD/${MOLOCH_PASSWORD}/g" -e "s,MOLOCH_INSTALL_DIR,${MOLOCH_INSTALL_DIR},g" < $MOLOCH_INSTALL_DIR/etc/config.ini.sample > $MOLOCH_INSTALL_DIR/etc/config.ini
else
    echo "Not overwriting $MOLOCH_INSTALL_DIR/etc/config.ini, delete and run again if update required (usually not), or edit by hand"
    sleep 2
fi


if [ -d "/etc/systemd" ] && [ -x "/bin/systemctl" ]; then
    echo "Installing systemd start files, use systemctl"
    sed -e "s/MOLOCH_INTERFACE/${MOLOCH_INTERFACE}/g" -e "s,MOLOCH_ELASTICSEARCH,${MOLOCH_ELASTICSEARCH},g" -e "s/MOLOCH_PASSWORD/${MOLOCH_PASSWORD}/g" -e "s,MOLOCH_INSTALL_DIR,${MOLOCH_INSTALL_DIR},g" < $MOLOCH_INSTALL_DIR/etc/molochcapture.systemd.service > /etc/systemd/system/molochcapture.service
    sed -e "s/MOLOCH_INTERFACE/${MOLOCH_INTERFACE}/g" -e "s,MOLOCH_ELASTICSEARCH,${MOLOCH_ELASTICSEARCH},g" -e "s/MOLOCH_PASSWORD/${MOLOCH_PASSWORD}/g" -e "s,MOLOCH_INSTALL_DIR,${MOLOCH_INSTALL_DIR},g" < $MOLOCH_INSTALL_DIR/etc/molochviewer.systemd.service > /etc/systemd/system/molochviewer.service
elif [ -d "/etc/init" ]; then
    echo "Installing upstart start files, use start"
    sed -e "s/MOLOCH_INTERFACE/${MOLOCH_INTERFACE}/g" -e "s,MOLOCH_ELASTICSEARCH,${MOLOCH_ELASTICSEARCH},g" -e "s/MOLOCH_PASSWORD/${MOLOCH_PASSWORD}/g" -e "s,MOLOCH_INSTALL_DIR,${MOLOCH_INSTALL_DIR},g" < $MOLOCH_INSTALL_DIR/etc/molochcapture.upstart.conf > /etc/init/molochcapture.conf
    sed -e "s/MOLOCH_INTERFACE/${MOLOCH_INTERFACE}/g" -e "s,MOLOCH_ELASTICSEARCH,${MOLOCH_ELASTICSEARCH},g" -e "s/MOLOCH_PASSWORD/${MOLOCH_PASSWORD}/g" -e "s,MOLOCH_INSTALL_DIR,${MOLOCH_INSTALL_DIR},g" < $MOLOCH_INSTALL_DIR/etc/molochviewer.upstart.conf > /etc/init/molochviewer.conf
else
    echo "No startup scripts created for capture and viewer"
fi

################################################################################
mkdir -p $MOLOCH_INSTALL_DIR/logs $MOLOCH_INSTALL_DIR/raw
chown nobody $MOLOCH_INSTALL_DIR/logs $MOLOCH_INSTALL_DIR/raw
chmod 0700 $MOLOCH_INSTALL_DIR/raw

################################################################################
if [ "$MOLOCH_LOCALELASTICSEARCH" == "yes" ]; then
    echo "Moloch - Downloading and installing demo OSS version of Elasticsearch"
    ES_VERSION=6.3.1
    if [ -f "/etc/redhat-release" ]; then
        yum install https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-${ES_VERSION}.rpm
    else
        wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-${ES_VERSION}.deb
        dpkg -i elasticsearch-oss-${ES_VERSION}.deb
        /bin/rm -f elasticsearch-oss-${ES_VERSION}.deb
    fi
fi

################################################################################
if [ -d "/etc/logrotate.d" ] && [ ! -f "/etc/logrotate.d/$MOLOCH_NAME" ]; then
    echo "Moloch - Installing /etc/logrotate.d/$MOLOCH_NAME to rotate files after 7 days"
    cat << EOF > /etc/logrotate.d/$MOLOCH_NAME
$MOLOCH_INSTALL_DIR/logs/capture.log
$MOLOCH_INSTALL_DIR/logs/viewer.log {
    daily
    rotate 7
    notifempty
    copytruncate
}
EOF
fi

################################################################################
INTERFACES=${MOLOCH_INTERFACE//;/ }
cat << EOF > $MOLOCH_INSTALL_DIR/bin/moloch_config_interfaces.sh
#!/bin/sh
for interface in $INTERFACES; do
  /sbin/ethtool -G \$interface rx 4096 tx 4096 || true
  for i in rx tx sg tso ufo gso gro lro; do
      /sbin/ethtool -K \$interface \$i off || true
  done
done
EOF
chmod a+x $MOLOCH_INSTALL_DIR/bin/moloch_config_interfaces.sh

################################################################################
if [ -d "/etc/security/limits.d" ] && [ ! -f "/etc/security/limits.d/99-moloch.conf" ]; then
    echo "Moloch - Installing /etc/security/limits.d/99-moloch.conf to make core and memlock unlimited"
    cat << EOF > /etc/security/limits.d/99-moloch.conf
nobody  -       core    unlimited
root    -       core    unlimited
nobody  -       memlock    unlimited
root    -       memlock    unlimited
EOF
fi

################################################################################

#MOLOCH_INET=not-set
#until [ "$MOLOCH_INET" == "yes" ] || [ "$MOLOCH_INET" == "no" ] || [ "$MOLOCH_INET" == "" ]; do
#    echo -n "Download GEO files? (yes or no) [yes] "
#    read -r MOLOCH_INET
#   done

if [ "$MOLOCH_INET" != "no" ]; then
    echo "Moloch - Downloading GEO files"
    $MOLOCH_INSTALL_DIR/bin/moloch_update_geo.sh > /dev/null
else
    echo "Moloch - NOT downloading GEO files"
fi


################################################################################
echo ""
echo "Moloch - Configured - Now continue with step 4 in $MOLOCH_INSTALL_DIR/README.txt"
echo ""
tail -n +10 $MOLOCH_INSTALL_DIR/README.txt
